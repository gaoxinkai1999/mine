apply plugin: 'com.android.application'

android {
    namespace "com.example.myappndefined"
    compileSdk rootProject.ext.compileSdkVersion
    
    // 启用 BuildConfig 生成
    buildFeatures {
        buildConfig true
    }
    
    signingConfigs {
        debug {
            // 使用默认的debug keystore
            storeFile file("${System.properties['user.home']}/.android/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        
        release {
            // 正式环境签名信息
            storeFile file("C:\\Users\\g\\Desktop\\key\\gao.jks")  // 实际keystore文件路径
            storePassword "miaoshidahu"
            keyAlias "gao"
            keyPassword "miaoshidahu"
            
            // 更安全的方式是使用环境变量或属性文件获取密码
            // storePassword System.getenv("RELEASE_STORE_PASSWORD") 
            // keyPassword System.getenv("RELEASE_KEY_PASSWORD")
        }
    }
    
    defaultConfig {
        minSdkVersion 30
        applicationId "com.example.myappnew"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 10301
        versionName "1.3.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release  // 使用release签名
            
            // 正式版应用名称
            resValue "string", "app_name", "MyApp" 
            

        }
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug  // 明确使用debug签名
            
            // 测试版应用名称
            resValue "string", "app_name", "MyApp (测试版)"
            

        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}




